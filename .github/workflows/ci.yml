name: CI

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

on:
  merge_group:
  pull_request:
    types: [ready_for_review,converted_to_draft,opened, reopened, synchronize]
    branches: [main]

jobs:
    build-and-generate:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          example_path: [
            "primitives/filter",
            "primitives/filter-map",
            "primitives/flat-map",
            "primitives/map",
            "primitives/merge",
            "primitives/split",
            "primitives/update-state",
            "dataflows-inline/bank-processing",
            "dataflows-inline/car-processing",
            "dataflows-inline/http-callout",
            "dataflows-inline/openai-callout",
            "dataflows-inline/split-sentence",
            "dataflows-inline/word-counter",
            "dataflows-inline/word-probe",
            "dataflows-composed/mask-user-info",
            "dataflows-composed/split-sentence"
          ]
          sdf-version: [sdf-preview9]
      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install stable CLI and start Fluvio cluster
          timeout-minutes: 10
          run: |
            curl -fsS https://hub.infinyon.cloud/install/install.sh | bash

        - name: Setup fluvio bin path
          run:  echo "~/.fluvio/bin" >> $GITHUB_PATH

        - name: Setup fvm bin path
          run:  echo "~/.fvm/bin" >> $GITHUB_PATH

        - name: install wasm wasi target
          run: |
            rustup target add wasm32-wasi

        - name: Install SDF version
          run: |
            fvm install ${{ matrix.sdf-version }}

        - name: Run sdf setup
          run: |
            sdf setup

        - name: Run tests
          working-directory: ./${{ matrix.example_path }}
          run: |
            make e2e

    done:
      name: Done
      needs:
        - build-and-generate
      runs-on: ubuntu-latest
      if: always()
      steps:
      - name: Dump needs context
        env:
          CONTEXT: ${{ toJson(needs) }}
        run: |
          echo -e "\033[33;1;4mDump context\033[0m"
          echo -e "$CONTEXT\n"
      - name: Report failure on cancellation
        if: ${{ contains(needs.*.result, 'cancelled') || cancelled() }}
        run: exit 1
      - name: Failing test and build
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      - name: Don't allow skipped
        if: ${{ contains(needs.*.result, 'skipped') }}
        run: exit 1
      - name: Successful test and build
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0